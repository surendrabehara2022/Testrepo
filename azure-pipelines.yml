trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  imageName: 'myconsoleapp'

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '8.x'
    installationPath: $(Agent.ToolsDirectory)/dotnet

# Step 1: List contents of MyConsoleApp to verify the Dockerfile exists
- script: |
    ls -R MyConsoleApp
  displayName: 'List MyConsoleApp Contents'

# Step 2: Build Docker Image (with corrected context)
- script: |
    docker build -t $(imageName):$(Build.BuildId) -f '$(Build.SourcesDirectory)/MyConsoleApp/Dockerfile' MyConsoleApp/
  displayName: 'Build Docker Image'

# Step 3: Tag Docker Image (optional but useful for pushing)
- script: |
    docker tag $(imageName):$(Build.BuildId) acrsqmbqafc.azurecr.io/$(imageName):$(Build.BuildId)
  displayName: 'Tag Docker Image'

- task: Docker@2
  inputs:
    containerRegistry: 'acrconnection'
    repository: '$(imageName)'
    command: 'push'
    tags: |
      $(Build.BuildId)

#- task: AzureCLI@2
#  inputs:
#    azureSubscription: 'myAzureSubscription'
#    scriptType: 'bash'
#    scriptLocation: 'inlineScript'
#    inlineScript: |
#      az containerapp update \
#        --name mycontainerapp \
#        --resource-group myResourceGroup \
#        --image myacr.azurecr.io/$(imageName):$(Build.BuildId)
#  displayName: 'Deploy to Azure Container App'
